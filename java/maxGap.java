/* 
???????????????????ï…?????????????????????????????????ÁÙ???O??n?? ?????¡Â??????????
?????????????????? ??n???? ???? n + 1??? ??????????§»??? ?????????????????§³? ?????? ??????????§³???????????????¨°? ???????????????????????????????§³ ???????????????????? 
 */

 public class maxGap {
     public static int maxGap (int[] arr) {
         if (arr == null || arr.length < 2) {
             return 0;
         }
         int len = arr.length;
         int min = Integer.MAX_VALUE;
         int max = Integer.MIN_VALUE;

        // ????????????§³??
         for (int i = 0; i < len; i++) {
             min = Math.min(min, arr[i]);
             max = Math.max(max, arr[i]);
         }

         if (min == max) {
             return 0;
         }

        // ???????????? ???????????????? ??§Ö?????????§³?
         boolean[] hasNums = new boolean[len + 1];
         int[] mins = new int[len + 1];
         int[] maxs = new int[len + 1];
         int flag = 0;
        //  ??????? ??????????????? ??§Ö?????????§³? ????????????TRUE
         for (int i = 0; i < len; i++) {
             flag = bucket(arr[i], len, min, max);
             mins[flag] = hasNums[flag] ? Math.min(mins[flag], arr[i]) : arr[i];
             maxs[flag] = hasNums[flag] ? Math.max(maxs[flag], arr[i]) : arr[i];
             hasNums[flag] = true;
         }
        
        // ????????????????????????????  ?????????????§»??????
        int res = 0;
        int lastMax = maxs[0];
        for (int i = 1; i <= len; i++) {
            if (hasNums[i]) {
                res = Math.max(res, mins[i] - lastMax);
                lastMax = maxs[i];
            }
        }
        return res;
     }

    public static int bucket(long num, long len, long min, long max) {
        return (int) ((num - min) * len / (max - min));
    }

     public static void main (String[] args) {
         int[] arr = new int[]{1, 5, 8, 9, 0, 3};
         int result = maxGap(arr);
         System.out.println(result);
     }
 }